// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url  	= env("DATABASE_URL")
  directUrl = env("DIRECT_DATABASE_URL")
  // If you want to use Prisma Migrate, you will need to manually create a shadow database
  // https://neon.tech/docs/guides/prisma-migrate#configure-a-shadow-database-for-prisma-migrate
  // make sure to append ?connect_timeout=10 to the connection string
  // shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}


model Applicant {
  id         String   @id @default(cuid())
  userId     String
  firstName  String
  lastName   String
  jobTitle   String
  resume     String
  skills     String?
  experience String?
  isMain      Boolean @default(false)
  isInProfile Boolean @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  applications Application[]

  @@unique([id, userId])
  @@index ([userId])
}

model Application {
  id          String   @id @default(cuid())
  userId     String

  title    String
  description String
  skillsSummary String
  companyName String?
  companyDetails String?
  
  applicantId String
  applicant   Applicant @relation(fields: [applicantId], references: [id], onDelete: Cascade)
  coverLetters CoverLetter[]
  
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([id, userId])
  @@index ([userId])

}



model CoverLetter {
  id          String   @id @default(cuid())
  userId     String
  applicationId String
  application   Application @relation(fields: [applicationId], references: [id], onDelete: Cascade)
  text String
  label String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([applicationId])
}